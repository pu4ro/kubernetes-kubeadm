---
- name: Set hostname to inventory hostname
  hostname:
    name: "{{ inventory_hostname }}"
  tags: common

- name: Update /etc/hosts
  lineinfile:
    path: /etc/hosts
    regexp: '^127\.0\.1\.1.*'
    line: "127.0.1.1 {{ inventory_hostname }}"
    state: present
  tags: common

- name: Disable firewall services
  service:
    name: "{{ item }}"
    state: stopped
    enabled: no
  loop:
    - "{{ 'firewalld' if ansible_os_family == 'RedHat' else 'ufw' }}"
  ignore_errors: true
  tags: common

- name: Disable SELinux (CentOS/RHEL)
  selinux:
    state: disabled
  when: ansible_os_family == "RedHat"
  tags: common

- name: Gather facts from all hosts
  setup:
  tags: common


- name: Configure /etc/hosts
  template:
    src: hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: '0644'
  tags: 
    - common
    - hosts-config


- name: Ensure the modules-load.d directory exists
  file:
    path: /etc/modules-load.d
    state: directory
    mode: '0755'
  tags: common  

- name: Add required kernel modules to load at boot
  copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      br_netfilter
      ip_vs
      ip_vs_rr
      ip_vs_wrr
      ip_vs_sh
      overlay
      xt_REDIRECT
      xt_owner
      nf_nat
      iptable_nat
      iptable_mangle
      iptable_filter
    owner: root
    group: root
    mode: '0644'
  notify: reload systemd-modules-load
  tags: common

- name: Load kernel modules
  modprobe:
    name: "{{ item }}"
    state: present
  loop:
    - br_netfilter
    - ip_vs
    - ip_vs_rr
    - ip_vs_wrr
    - ip_vs_sh
    - overlay
    - xt_REDIRECT
    - xt_owner
    - nf_nat
    - iptable_nat
    - iptable_mangle
    - iptable_filter
  tags: common

# set timezone
- name: Set timezone to Asia/Seoul
  timezone:
    name: "{{ set_timezone }}"
  tags: timezone

- name: Check the current timezone
  command: timedatectl
  register: timedatectl_output
  tags: timezone

- name: Show the current timezone
  debug:
    msg: "{{ timedatectl_output.stdout_lines }}"
  tags: timezone

# set selinux off
- name: Check SELinux status
  command: getenforce
  register: selinux_status
  changed_when: false
  when: ansible_os_family == "RedHat"
  tags: common

- name: Disable SELinux
  command: setenforce 0
  when: ansible_facts['os_family'] == "RedHat"
  tags: common
  ignore_errors: true

- name: Check current swap status
  command: swapon --show
  register: swap_status
  failed_when: false
  changed_when: false

- name: Turn off all swap spaces immediately
  command: swapoff -a
  when: swap_status.stdout | length > 0
  register: swapoff_result
  failed_when: false

- name: Backup /etc/fstab file
  copy:
    src: /etc/fstab
    dest: "/etc/fstab.backup.{{ ansible_date_time.epoch }}"
    remote_src: yes
    owner: root
    group: root
    mode: '0644'
  register: fstab_backup

- name: Disable swap in fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*\sswap\s.*)$'
    replace: '#\1'
    backup: yes
  register: fstab_swap_disabled

- name: Disable snapd (Ubuntu)
  service:
    name: snapd
    state: stopped
    enabled: no
  when: ansible_os_family == "Debian"
  ignore_errors: true
  tags: common
  