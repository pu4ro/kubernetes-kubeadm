---
# =============================================================================
# DNS CONFIGURATION ROLE
# =============================================================================
# Configures DNS resolution for Kubernetes cluster
# Sets up nameserver configuration and DNS forwarding
# Supports both Ubuntu/Debian and CentOS/RHEL systems

# -----------------------------------------------------------------------------
# DNS CONFIGURATION BACKUP AND SETUP
# -----------------------------------------------------------------------------

- name: Backup current resolv.conf
  copy:
    src: /etc/resolv.conf
    dest: /etc/resolv.conf.backup
    remote_src: yes
    force: no
  tags: set_dns

- name: Configure DNS servers for all OS families
  copy:
    content: |
      # Managed by Ansible - DNS Configuration
      nameserver {{ main_nameserver }}
      {% if forward_servers is defined %}
      {% for server in forward_servers %}
      nameserver {{ server }}
      {% endfor %}
      {% endif %}
      
      # Domain configuration
      {% if main_domain is defined %}
      search {{ main_domain }}
      domain {{ main_domain }}
      {% endif %}
    dest: /etc/resolv.conf
    owner: root
    group: root
    mode: '0644'
    backup: yes
  tags: set_dns

- name: Reload NetworkManager (CentOS/RHEL only)
  systemd:
    name: NetworkManager
    state: reloaded
  when: 
    - ansible_facts['os_family'] == "RedHat"
    - ansible_service_mgr == "systemd"
  ignore_errors: yes
  tags: set_dns

- name: Restart networking service (Ubuntu/Debian - if needed)
  systemd:
    name: systemd-resolved
    state: restarted
  when: 
    - ansible_facts['os_family'] == "Debian"
    - ansible_service_mgr == "systemd"
  ignore_errors: yes
  tags: set_dns
