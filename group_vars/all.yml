---
# how to set domain
main_domain: onboarding1.com

# docker-registry setting - to install k8s or runway
docker_registry_ip: "192.168.0.21"
registry_port: 5000
registry_version: "2"
registry_data_dir: "/opt/docker-registry"
registry_name: "registry"

# timezone && chrony
set_timezone: Asia/Seoul


# kubeadm-init.yaml create
kubernetes_version: '1.23.17'
dns_domain: cluster.local
service_subnet: 10.96.0.0/12
pod_subnet: 10.244.0.0/16

# DNS wildcard_ip
wildcard_ip: "192.168.0.30"
main_nameserver: "192.168.0.21"
enable_forwarding: true
forward_servers:
  - "168.126.63.1"
  - "168.126.63.2"
enable_wildcard: true

# helm command && OS package repo
repo_url:
  centos: "http://192.168.0.21:8080/repo"
  ubuntu: "http://your-web-server.com/ubuntu/"

helm_repo_ip: "192.168.0.21"

# Docker 관련 변수
insecure_registries:
  - "harbor.makina.{{ main_domain }}"
  - "cr.makina.rocks"

# Master Node remove taint
remove_taints: true

rook_ceph_values:
  cephClusterSpec:
    dataDirHostPath: /var/lib/rook
    mon:
      count: 3
    storage:
      useAllNodes: true
      useAllDevices: true
    dashboard:
      enabled: true
  operatorNamespace: rook-ceph

helm_repo_url: "http://get.helm.sh/helm-v3.5.4-linux-amd64.tar.gz"
k9s_repo_url: "http://github.com/derailed/k9s/releases/download/v0.24.10/k9s_Linux_x86_64.tar.gz"


# delete_master_node_taint
remove_master_taint: true

# cert_Manager 
cert_manager_version: "v1.11.0"
cert_manager_values:
  installCRDs: true
  prometheus:
    enabled: false

# istio_service_type
istio_service_type: "LoadBalancer"

# metalLb-vars
metallb_namespace: metallb-system
metallb_ip_pool_name: default
metallb_l2adv_name: default
metallb_ip_range: "192.168.0.30/32"

# harbor
harbor_values:
  expose:
    tls:
      enabled: false
    type: clusterIP
  externalURLs:
    - "http://harbor.makina.{{ main_domain }}"
  persistence:
    enabled: true
    persistentVolumeClaim:
      registry:
        size: "50Gi"
  trivy:
    enabled: false


# elastic-search replicas
elastic_replicas: 2

#backend
image_registry_url: "http://harbor.makina.{{ main_domain }}/api/v2.0"
image_registry_username: "mrx.dev"
image_registry_password: "klw9pcSDWkpY4udGaGjQP7KrjGoegdIw"
image_registry_api_token: "YWRtaW46SGaFyYm9yMTIzNDU="
grafana_public_url: "grafana.runway.makina.{{ main_domain }}"
runway_url: "runway.makina.{{ main_domain }}"
postgresql_replica_count: "3"
project_shard_volume_storage_class: "ceph-filesystem"
nfs_pv_path: "/nfs"
nfs_pv_server: "master1"
link_instance_max_cpu: "8"
link_instance_max_memory: "16"
link_instance_max_gpu: "0"
pod_commit_image_repository: "makina-runway/commit-link-"
pip_trusted_host: "pubpypi.makina.rocks"
pip_index_url: "http://pubpypi.makina.rocks/simple/"
pgpool_username: "kidi"
pgpool_password: "kidi"


# create_docker_config.json in kubelet, only use public
docker_username: "admin"
docker_password: "password"
docker_registry: "cr.makina.rocks"


# frontend-vars
helm_namespace: "runway"
global_production: true
image_tag: "v1.1.0"